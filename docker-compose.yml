version: '3.2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper 
    ports:
      - "2181:2181"
    networks:
      - kafkanet 

  kafka:
    image: wurstmeister/kafka
    build: .
    container_name: kafka
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_PORT: 9092
      KAFKA_CREATE_TOPICS: "gpsstream:1:1,mperrors:1:1,mplogs:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
    networks:
      - kafkanet 

  prometheus:
     image: prom/prometheus
     container_name: prometheus
     networks:
      - kafkanet
     ports:
      - "9090:9090"
      
#  kafdrop:
#    image: obsidiandynamics/kafdrop:3.8.1
#    container_name: kafdrop
#    depends_on:
#      - zookeeper
#      - kafka
#    expose:
#      - 9000
#    ports:
#      - 9000:9000
#    environment:
#      ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_BROKERCONNECT: kafka:29092

      
      
  kadmin:
    image: kadmin  
    build: ./kadmin
    container_name: kadmin
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    links:      
      - kafka       
    depends_on:     
      - kafka        
    ports:
      - '5000:5000'
    volumes:
      - /opt/kadmin/logs/:/opt/kadmin/logs
    networks:
      - kafkanet
      
  kproducer:
    image: kproducer  
    build: ./kproducer
    container_name: kproducer
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    links:      
      - kafka       
    depends_on:     
      - kafka        
    ports:
      - '5001:5001'
    volumes:
      - /opt/kproducer/logs/:/opt/kproducer/logs
    networks:
      - kafkanet
      
  collector:
    image: collector  
    build: ./collector
    container_name: collector
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    links:      
      - kafka       
    depends_on:     
      - kafka        
    ports:
      - '5002:5002'
    volumes:
      - /opt/collector/logs/:/opt/collector/logs
    networks:
      - kafkanet
  
  
  
networks:
  kafkanet:
    driver: bridge   
    ipam:
      driver: default

